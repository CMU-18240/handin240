#!/usr/bin/python
# create_cfg.py
#
# Utility script to help generate the rl_config for a given homework.
#
# Usage:
#   - Run script with the homework number as the argument

import os;
import optparse;

from env import *;

# Returns a tuple of (options, args) parsed from the command line.
# Raises an error (and exits) if no arg for hwNum is given.
def getArgs():
    usage = "usage: %prog hwNum";
    parser = optparse.OptionParser(usage=usage)
    (options, args) = parser.parse_args();
    if (len(args) != 1):
        parser.error("Must specify homework number as arg");
    return (options, args);

def main():
    (options, args) = getArgs();
    hwNum = args[0];
    cfgPath = CFG_DIR + "/" + hwNum + ".cfg";
    problemNum = 1;
    cfgOut = "rl_config\n";

    while (True):
        config = "";
        print("Configuring Problem " + str(problemNum) + ":");
        config += "problem " + str(problemNum) + "\n";

        print("Type 'stop' to end configuration");
        isDrill = raw_input("Is it a drill problem (y/n)?: ");
        if (isDrill == "stop"):
            break;
        if (isDrill == "y"):
            drill = "drill true\n";
        else:
            drill = "drill false\n";
        config += drill;

        points = raw_input("How many points?: ");
        config += "points " + points + "\n";

        files = raw_input("What files (please separate by spaces)? Type 'none' if there are no files for this problem: ");
        config += "files " + files + "\n";

        print(config);
        answer = raw_input("Is this correct (y/n)?: ");
        if (answer != "y"):
            continue;
        config += "endproblem\n\n"
        cfgOut += config;
        problemNum += 1;

    fd = open(cfgPath, "w");
    fd.write(cfgOut);
    fd.close();
    print("Config written to " + cfgPath);

    return 0;

exit(main());
